/L14"Delphi" Nocase Line Comment = // Block Comment On = { Block Comment On Alt = (* Block Comment Off = } Block Comment Off Alt = *) Escape Char = ?String Chars = ' File Extensions = pas dpr 
/Delimiters = #$&()*+,-./;<>@[]^{}' 
/Function String = "%^{procedure^}^{function^}" 
/Indent Strings = "begin" "repeat" "asm" 
/Unindent Strings = "end" "until" 
/C1"Reserved words" 
array asm 
begin 
case class const constructor 
destructor dispinterface do downto 
else end except exports 
file final finalization finally for function 
goto 
if implementation inherited initialization inline interface 
label library 
nil 
object of out 
packed procedure program property 
raise record repeat resourcestring 
sealed set static string 
then threadvar to try type 
unit unsafe until 
uses 
var 
while with 
/C2"Directives" 
absolute abstract assembler automated 
cdecl contains 
default dispid dynamic 
export external 
far forward 
implements index 
local 
message 
name near nodefault 
overload override 
package pascal platform private protected public published 
read readonly register reintroduce requires resident 
safecall stdcall stored 
varargs 
virtual 
write writeonly 
/C3"Operators" 
* 
+ 
- 
// / 
< <= <> 
> >= 
@ 
and as 
div 
in is 
mod 
not 
or 
shl shr 
xor 
/C4"Special symbols" 
# 
$ 
& 
( 
(. 
) 
, 
. 
.) 
.. 
: 
:= 
; 
[ 
] 
^ 
{ 
} 